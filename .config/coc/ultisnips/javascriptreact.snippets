# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

# snippet mya
# <a href="$1"${2: class="${3:link}"}>
#     $0
# </a>
# endsnippet

snippet jp "jsx props" i
$1={$2}
endsnippet

snippet clog
console.log("${1}", ${2:$1})
endsnippet

snippet deconst "const解构"
const { $2 } = $1
endsnippet

snippet delet "let解构"
let { $2 } = $1
endsnippet

snippet deprops ""
const { $1 } = this.props$2
endsnippet

snippet destate ""
const { $1 } = this.state$2
endsnippet

snippet ss ""
this.setState({
  $1: $2
})
endsnippet

snippet iptd "import default module"
import $1 from '${2:$1}'
endsnippet

snippet iptc "import children module"
import { $1 } from '${2:$1}'
endsnippet

snippet iptrouter "import gem router" b
import { withRouter } from '@gem-mine/durex-router'
endsnippet

snippet iptactions "import gem actions" b
import { smart, actions } from '@gem-mine/durex'
endsnippet

snippet np-f "a new page" b
import React, { useState, useEffect, useCallback, useMemo, useRef} from 'react'
// import './index.scss'



export default props => {

  return <div>new page</div>
}
endsnippet

snippet np-c "import a component page" b
import React, { Component } from 'react'

class ${1:ComponentName} extends Component {

	componentDidMount() {

	}

	render() {
		return <div>${1:ComponentName}</div>
	}
}

export default ${1:ComponentName}
endsnippet

snippet np-NDc "import a nd-function page" b
import React, { Component } from 'react'
import { withRouter } from '@gem-mine/durex-router'
import { smart, actions, getState } from '@gem-mine/durex'

@withRouter
@smart(({ ${1:ComponentName} }) => ({ ${1:ComponentName} }))
class ${1:ComponentName} extends Component {

	constructor(props) {
	  super(props)
			this.state = {

			}
	}

	componentDidMount() {

	}

	render() {
		return <div>${1:ComponentName}</div>
	}
}

export default ${1:ComponentName}
endsnippet


snippet np-NDf "" b
import React from 'react'
import { withRouter } from '@gem-mine/durex-router'
import { smart, actions, getState } from '@gem-mine/durex'

const $1 = props => {
	return <div>$1</div>
}

export default withRouter(
  smart(({ 

  }) => ({

  }))($1)
)
endsnippet

snippet ds "DOM上的自定义数据" b
const ${1:your_data_name} = ${2:e}.target.dataset.${1:${VISUAL}}
endsnippet

snippet class "snippet-className" b
className={ "$1" }
endsnippet

snippet hucb "hooks useCallback" b
const $1 = useCallback(($2) => {
		$4
	}, [$3])
endsnippet

snippet huef "hooks useEffect" b
useEffect(() => { $2 }, [$1])
endsnippet

snippet huss "hooks useState" b
const [$1, set${3:$1}] = useState($2)
endsnippet

snippet humm "hooks useMemo" b
const $1 = useMemo(() => {
	$3
}, [$2])
endsnippet

snippet huur "hooks useRef" b
const ${1:ref} = useRef(${2:null})
endsnippet
